module Main where

import Funktionen
import HaskellUnit
import Data.Ratio

main = runTests [test1,test2,test3,test4,test5,test6,test7,test8,test9,test10,test11,test12,test13,test14,test15,test16,test17,test18,test19,test20,test21,test22,test25]

test1 = testcase "factorial 1" "(factorial 5) falsch" 120 (factorial 5)
test2 = testcase "factorial 2" "(factorial 0) falsch" 1 (factorial 0)
test3 = testcase "factorial 2" "(factorial 0) falsch" 402387260077093773543702433923003985719374864210714632543799910429938512398629020592044208486969404800479988610197196058631666872994808558901323829669944590997424504087073759918823627727188732519779505950995276120874975462497043601418278094646496291056393887437886487337119181045825783647849977012476632889835955735432513185323958463075557409114262417474349347553428646576611667797396668820291207379143853719588249808126867838374559731746136085379534524221586593201928090878297308431392844403281231558611036976801357304216168747609675871348312025478589320767169132448426236131412508780208000261683151027341827977704784635868170164365024153691398281264810213092761244896359928705114964975419909342221566832572080821333186116811553615836546984046708975602900950537616475847728421889679646244945160765353408198901385442487984959953319101723355556602139450399736280750137837615307127761926849034352625200015888535147331611702103968175921510907788019393178114194545257223865541461062892187960223838971476088506276862967146674697562911234082439208160153780889893964518263243671616762179168909779911903754031274622289988005195444414282012187361745992642956581746628302955570299024324153181617210465832036786906117260158783520751516284225540265170483304226143974286933061690897968482590125458327168226458066526769958652682272807075781391858178889652208164348344825993266043367660176999612831860788386150279465955131156552036093988180612138558600301435694527224206344631797460594682573103790084024432438465657245014402821885252470935190620929023136493273497565513958720559654228749774011413346962715422845862377387538230483865688976461927383814900140767310446640259899490222221765904339901886018566526485061799702356193897017860040811889729918311021171229845901641921068884387121855646124960798722908519296819372388642614839657382291123125024186649353143970137428531926649875337218940694281434118520158014123344828015051399694290153483077644569099073152433278288269864602789864321139083506217095002597389863554277196742822248757586765752344220207573630569498825087968928162753848863396909959826280956121450994871701244516461260379029309120889086942028510640182154399457156805941872748998094254742173582401063677404595741785160829230135358081840096996372524230560855903700624271243416909004153690105933983835777939410970027753472000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (factorial 1000)

test4 = testcase "fib 7" "(fib 7) falsch" 13 (fib 7)
test5 = testcase "fib 2" "(fib 2) falsch" 1 (fib 2)
test6 = testcase "fib 3" "(fib 3) falsch" 2 (fib 3)
test7 = testcase "fib 30" "(fib 30) falsch" 832040 (fib 30)
test8 = testcase "quersumme 7" "(quersumme 7) falsch" 7 (quersumme 7)
test9 = testcase "quersumme 17" "(quersumme 17) falsch" 8 (quersumme 17)
test10 = testcase "quersumme 777" "(quersumme 777) falsch" 3 (quersumme 777)
test11 = testcase "fib 5" "(fib 5) falsch" 5 (fib 5)
test12 = testcase "fib 10" "(fib 10) falsch" 55 (fib 10)
test13 = testcase "fib 19" "(fib 19) falsch" 4181 (fib 19)
test14 = testcase "fib2 5" "(fib2 5) falsch" 5 (fib2 5)
test15 = testcase "fib2 10" "(fib2 10) falsch" 55 (fib2 10)
test16 = testcase "fib2 19" "(fib2 19) falsch" 4181 (fib2 19)

test17 = testcase "heron 10 25" "(heron 10 25) falsch" 5 (heron 10 25)
test18 = testcase "heron 11 111" "(heron 11 111) falsch" 10.535653752852738 (heron 11 111)

test19 = testcase "(gcdExt 123653463634533452336543 34534534534534534523132453)" "(gcdExt 123653463634533452336543 34534534534534534523132453) falsch" (1,-6766448136102603071125496,24227769674898184617493) (gcdExt 123653463634533452336543 34534534534534534523132453)
test20 = testcase "(gcdExt 123 34534534534534534523132453)" "(gcdExt 123 34534534534534534523132453) falsch" (1,-1403842867257501403379368,5) (gcdExt 123 34534534534534534523132453)
test21 = testcase "(gcdExt 1236534 11111111111111)" "(gcdExt 1236534 11111111111111) falsch" (1,1235020180961,-137443) (gcdExt 1236534 11111111111111)
test22 = testcase "(gcdExt 15 55)" "(gcdExt 15 55) falsch" (5,4,-1) (gcdExt 15 55)

-- test23 = testcase "(eHoch)" "(eHoch) falsch" (4299778907798767752801199122242037634663518280784714275131782813346597523870956720660008227544949996496057758175050906671347686438130409774741771022426508339 % 1581800261761765299689817607733333906622304546853925787603270574495213559207286705236295999595873191292435557980122436580528562896896000000000000000000000000) (eHoch 1)
-- test24 = testcase "(eHoch)" "(eHoch) falsch" (exp 1) (eHoch2 1)

test25 = testcase "a" "" 9 (a 2 3)

-- test26 = testcase "#" "" (1024) (2#10)
-- test27 = testcase "#" "" (2^100) (2#100)

-- test28 = testcase "lnTerm" "" (-401734511064747568885490523085290650630550748445698208825344%25) (lnTerm 100 5)
-- test29 = testcase "sinTerm" "" (17516230804060213386546619791123951641003274273456447146963353548622388533573257518582977354526519775390625 % 8923895684937037432021360801189586105530367037039160482750002550459177886368851777220192329717961142781653729266210249993954819816378927264280808950251342809703821125812453338811068845552921698144080784068305429513515630145681880259681177981819669048736742035255498809273390542910247321208959879449666455896627520746277745564643414357850456064) (sinTerm 100 5)
-- test30 = testcase "cosTerm" "" (3503246160812042677309323958224790328200654854691289429392670709724477706714651503716595470905303955078125 % 44397490969836007124484382095470577639454562373329156630597027614224765603825133220000956864268463396923650394359254975094302586151138941613337357961449466714944383710509718103537655948024486060418312358548783231410525523112845175421299392944376462929038517588335814971509405686120633438850546663928688835306604580827252465495738379889803264) (cosTerm 100 5)

-- test31 = testcase "kniffel" "" (6240321451 % 470184984576) (kniffel 3)

--test11 = testcase "readBinary \"10\"" "(readBinary \"10\") falsch" 2 (readBinary "10")
--test12 = testcase "readBinary \"11\"" "(readBinary \"11\") falsch" 3 (readBinary "11")
--test13 = testcase "readBinary \"101010\"" "(readBinary \"101010\") falsch" 42 (readBinary "101010")
--test14 = testcase "toOctalString 7" "(toOctalString 7) falsch" "7" (toOctalString 7)
--test15 = testcase "toOctalString 8" "(toOctalString 8) falsch" "10" (toOctalString 8)
--test16 = testcase "toOctalString 65" "(toOctalString 65) falsch" "101" (toOctalString 65)

